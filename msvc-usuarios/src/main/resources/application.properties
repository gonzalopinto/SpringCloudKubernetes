spring.application.name=msvc-usuarios
server.port=${PORT:8001}
#spring.datasource.url=jdbc:mysql://localhost:3306/msvc_usuarios?serverTimezone=Europe/Madrid&allowPublicKeyRetrieval=false
#spring.datasource.url=jdbc:mysql://localhost:3306/msvc_usuarios
#spring.datasource.url=jdbc:mysql://host.docker.internal:3306/msvc_usuarios
spring.datasource.url=jdbc:mysql://${DB_HOST:mysql8:3306}/${DB_DATABASE:msvc_usuarios}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PWD:sasa}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.generate-ddl=true
logging.level.org.hibernate.SQL=debug

logging.file.path=/app/logs

#msvc.cursos.url=${CURSOS_URL:msvc-cursos:8002}

spring.cloud.kubernetes.secrets.enable-api=true
spring.cloud.kubernetes.discovery.all-namespaces=true
spring.profiles.active=dev

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=ALWAYS
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

#Esta es otra manera de configurar la BBDD con retardo para que se levante correctamente
# si no se quiere poner el retardo en el Dockerfile
#spring.datasource.hikari.connection-timeout=20000
#spring.datasource.hikari.maximum-pool-size=15
#spring.datasource.hikari.minimum-idle=0
#spring.datasource.hikari.initialization-fail-timeout=-1
#spring.datasource.continue-on-error=true